name: Template Release Notes


on:
  workflow_dispatch:

jobs:
  pre-release:
    name: "Pre Release"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Build & test"
        run: |
          echo "done!"

      - uses: actions/checkout@v2
      - name: Set version env
        run: echo "PRERELEASE_VERSION=$(echo v`date +%Y.%m.%d`.`git rev-parse --short HEAD`.rc)" >> $GITHUB_ENV

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ env.PRERELEASE_VERSION }}
          prerelease: true
          title: ${{ env.PRERELEASE_VERSION }}
      
      - name: "Fetching Release ID and Updating template with new tag"
        run: |
          curl -o .github/release_tag.json --location --request GET https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ env.PRERELEASE_VERSION }} \
          --header 'Accept: application/vnd.github.v3+json' \
          --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \

          echo "RELEASE_GIT_ID=$(grep --max-count=1 '"id":.*' .github/release_tag.json | sed -n 's/[^0-9]*//gp')" >> $GITHUB_ENV
          cat .github/release_notes_template.md
          echo "RELEASE_NOTES_TAGGED=$(sed 's/{RELEASE_TAG}/${{ env.PRERELEASE_VERSION }}/' .github/release_notes_template.md)" >> $GITHUB_ENV
          cat .github/release_notes_template.md
      - name: "Updating Release Notes Template Local File"
        run: |
          echo "RELEASE_NOTES=$(echo ${{ env.RELEASE_NOTES_TAGGED }} sed 's/$/\\n/' | tr -d '\n')" >> $GITHUB_ENV
          echo "NOTES_TEMPLATE Content:"
          echo $RELEASE_NOTES

      - name: "Updating Release Notes Template Local File"
        run: |
          echo ${{ env.RELEASE_NOTES }}

          curl --location --request PATCH https://api.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_GIT_ID }} \
          --header 'Accept: application/vnd.github.v3+json' \
          --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'Content-Type: application/json' \
          --data-raw "{\"tag_name\" : \"${{ env.PRERELEASE_VERSION }}\",\"body\": \"${{ env.RELEASE_NOTES }}\"}"

